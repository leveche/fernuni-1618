#+TITLE: Objekorientierte Programmierung

feu.informatik.kurs1618{betreuung,diskussion}

* Einstieg
Objekte, die jeweils eine Identitaet haben, die einander Nachrichten schicken
und die als Reaktion auf Nachrichten ihren eigenen Zustand veraendern koennen.

Ein objekt kennt ein anderes, indem es als Teil seines eigenen Zustands eine
/Referenz/ auf das andere Objekt besitzt. Die Referenz(en) koennen dem Objekt
als Parameter einer Nachricht geschickt werden.

Teilung der Auftragserteilung und Augtragsdurchfuerung: eine Nachricht wird
durch eine /Methode/ bearbeitet, deren Realisierung von dem Ausloeser der
Nachricht veborgen ist.

Klassifikation: wir gruppieren Objekte unter dem Aspekt, welche Nachrichten sie
verstehen. Eine /Klasse/ legt fest die Faehigkeiten und Eigenschaften, die allen
Objekten der Klasse gemeinsam ist. Eine /Superklasse/ besitzt nur diejenigen
Eigenschaften, die allen ihrer /Subclassen/ gemeinsam sind.

Eine /abstrakte Klasse/ hat keine direkte Objekte, sie fasst nur zusammen
Gemeinsamkeiten ihrer Subklassen. Die Entscheidung, eine Klasse als abstrakt
auszulegen, ist vom Kontext abhaengig. Z.B. Klasse Hund kann konkret sein im
Kontext der Registrietung der Haustiere, und abstrakt zu den Zwecken eines
Hundesalons, in dem spezifische eingenschaften der verschiedenen Hunderassen von
Bedeuting sind.

Durch /Vererbung/ brauchen die gemeinsamen Eigenschaften nur einmal in der
Superklasse beschrieben zu weden. Durch /Spezialisierung/ koennen die SUbklassen
die Eingenschaften modifizieren.

Alle Objekten einer Klasse sind auch Objekten aller ihrer Superklassen.
** Java
*** Arrays
Jagged Arrays: die referenzierte Arrays in einen Java-array koennen
unterschiedliche Laengen haben.
#+begin_src java
char[][] satz;
#+end_src

E.g. erzeugt die Anweisung
#+begin_src java
boolean[][] b = new boolean[2][];
#+end_src
das Objektgeflecht
#+begin_example

#+end_example
** Kontrollstrukturen
*** while-Schleife
#+begin_src java
public class FacultaetWhile {
    public static void main(String[] args){
        int n = Integer.parseInt(args[0]);
        long result = 1;
        int i = 2;
        while(i <= n) {
            result = result * i;
            i++;
        }
    System.out.println(result);
    }
}
#+end_src

*** for-Schleife
#+begin_src java
public class FacultaetFor {
    public static void main(String[] args){
        int n = Integer.parseInt(args[0]);
        long result = 1;
        for (int i = 2; i<=n; i++) {
            result = result * i;
        }
    System.out.println(result);
    }
}
#+end_src

#+begin_src java
int[] arr = new int[10];
for (int i=0; i < arr.length; i++) {
    arr[i] = i+1;
}
#+end_src

*** foreach
#+begin_src java
int[] arr = {1, 2, 3, 4, 5};
for (int elem : arr) {
    System.out.print(elem + " ");
}
#+end_src
*** ad-hoc Aufgabe 5

#+begin_src java
public class AhA5 {
    static int n = 10;
    public static void main(String[] args) {
        int[][] arr = new int[n][];
        for (int i=0; i < n; i++) {
            int[] tmp = new int[i+1];
            for (int j=0; j <= i; j++) {
                tmp[j] = j;
            }
            arr[i] = tmp;
        }

        for (int[] m : arr) {
            for (int n : m) {
                System.out.print(n + " ");
                // this prints an extra ' ' at the end of each line
                // but I'm not setting up an if statement just to fix that.
            }
            System.out.println("");
        }
    }
}
#+end_src

*** switch
#+begin_src java
public class SwitchDemo {
    public static void main(String[] args) {
        int month = Integer.parseInt(args[0]);
        switch(month) {
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
        case 12:
            System.out.println ("31 Days");
            break;
        case 2:
            System.out.println ("28/29 Days");
            break;
        case 4:
        case 6:
        case 9:
        case 11:
            System.out.println("30 Days");
            break;
        default:
            System.out.println("Invalid month");
            break;
        }
    }
}
#+end_src

#+RESULTS:
